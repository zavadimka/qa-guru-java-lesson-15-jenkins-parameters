plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

group 'com.zavadimka'

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0",
    selenideVersion = "6.19.1",
    junitVersion = "5.10.1",
    slf4jVersion = "2.0.9",
    ownerVersion = "1.0.12"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task demoqa_tests(type: Test) {
    useJUnitPlatform {
        includeTags("demoqa")
    }
}

task property1_test(type: Test) {
    useJUnitPlatform {
        includeTags("property1")
    }
}

task property2_test(type: Test) {
    useJUnitPlatform {
        includeTags("property2")
    }
}

task owner1_test(type: Test) {
    useJUnitPlatform {
        includeTags("owner1")
    }
}

task owner2_test(type: Test) {
    useJUnitPlatform {
        includeTags("owner2")
    }
}

task owner3_test(type: Test) {
    useJUnitPlatform {
        includeTags("OwnerEnvironment")
    }
}